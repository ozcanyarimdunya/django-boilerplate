{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Django Boilerplate A ready to use boilerplate django boilerplate project. Project Django boilerplate Author Ozcan Yarimdunya Documentation https://ozcanyarimdunya.github.io/django-boilerplate/ Github https://github.com/ozcanyarimdunya/django-boilerplate/ Features docker support Settings are separated as production and development static , media files and templates set django-constance installed A common app installed with a timestamped BaseModel model Installation Clone the repository. $ git clone https://github.com/ozcanyarimdunya/django-boilerplate.git myapp $ cd myapp/ Install the virtualenv package, create new virtual environment and activate it. $ pip install virtualenv $ virtualenv venv $ source venv/bin/activate Install all dependencies and start application on http://127.0.0.1:8000/ . $ make To access admin panel, create a superuser and visit http://127.0.0.1:8000/admin/ . $ make superuser Running in docker Make sure you have installed docker and docker-compose . $ make docd To access admin panel, create a superuser in docker and visit http://127.0.0.1:8000/admin/ . $ docker exec -ti docker_webapp_1 make superuser","title":"Introduction"},{"location":"#django-boilerplate","text":"A ready to use boilerplate django boilerplate project. Project Django boilerplate Author Ozcan Yarimdunya Documentation https://ozcanyarimdunya.github.io/django-boilerplate/ Github https://github.com/ozcanyarimdunya/django-boilerplate/","title":"Django Boilerplate"},{"location":"#features","text":"docker support Settings are separated as production and development static , media files and templates set django-constance installed A common app installed with a timestamped BaseModel model","title":"Features"},{"location":"#installation","text":"Clone the repository. $ git clone https://github.com/ozcanyarimdunya/django-boilerplate.git myapp $ cd myapp/ Install the virtualenv package, create new virtual environment and activate it. $ pip install virtualenv $ virtualenv venv $ source venv/bin/activate Install all dependencies and start application on http://127.0.0.1:8000/ . $ make To access admin panel, create a superuser and visit http://127.0.0.1:8000/admin/ . $ make superuser","title":"Installation"},{"location":"#running-in-docker","text":"Make sure you have installed docker and docker-compose . $ make docd To access admin panel, create a superuser in docker and visit http://127.0.0.1:8000/admin/ . $ docker exec -ti docker_webapp_1 make superuser","title":"Running in docker"},{"location":"about/","text":"Project Structure Project tree . \u251c\u2500\u2500 db.sqlite3 \u251c\u2500\u2500 docker \u2502 \u251c\u2500\u2500 docker-compose.yml \u2502 \u251c\u2500\u2500 entrypoint.sh \u2502 \u251c\u2500\u2500 nginx \u2502 \u2502 \u251c\u2500\u2500 default.conf \u2502 \u2502 \u2514\u2500\u2500 Dockerfile \u2502 \u251c\u2500\u2500 start.sh \u2502 \u2514\u2500\u2500 webapp \u2502 \u2514\u2500\u2500 Dockerfile \u251c\u2500\u2500 docs \u2502 \u251c\u2500\u2500 about.md \u2502 \u2514\u2500\u2500 index.md \u251c\u2500\u2500 Makefile \u251c\u2500\u2500 manage.py \u251c\u2500\u2500 mkdocs.yml \u251c\u2500\u2500 README.md \u251c\u2500\u2500 requirements.txt \u251c\u2500\u2500 source \u2502 \u251c\u2500\u2500 apps \u2502 \u2502 \u251c\u2500\u2500 common \u2502 \u2502 \u2502 \u251c\u2500\u2500 admin.py \u2502 \u2502 \u2502 \u251c\u2500\u2500 apps.py \u2502 \u2502 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u2502 \u2502 \u251c\u2500\u2500 migrations \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 __init__.py \u2502 \u2502 \u2502 \u251c\u2500\u2500 models.py \u2502 \u2502 \u2502 \u251c\u2500\u2500 tests.py \u2502 \u2502 \u2502 \u251c\u2500\u2500 urls.py \u2502 \u2502 \u2502 \u2514\u2500\u2500 views.py \u2502 \u2502 \u2514\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 assets \u2502 \u2502 \u251c\u2500\u2500 static \u2502 \u2502 \u2514\u2500\u2500 static-dev \u2502 \u2502 \u2514\u2500\u2500 local \u2502 \u251c\u2500\u2500 core \u2502 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u2502 \u251c\u2500\u2500 tests \u2502 \u2502 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u2502 \u2502 \u2514\u2500\u2500 test_utils.py \u2502 \u2502 \u2514\u2500\u2500 utils.py \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 media \u2502 \u251c\u2500\u2500 settings \u2502 \u2502 \u251c\u2500\u2500 base.py \u2502 \u2502 \u251c\u2500\u2500 dev.py \u2502 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u2502 \u2514\u2500\u2500 prod.py \u2502 \u251c\u2500\u2500 templates \u2502 \u2502 \u2514\u2500\u2500 index.html \u2502 \u251c\u2500\u2500 urls.py \u2502 \u2514\u2500\u2500 wsgi.py \u2514\u2500\u2500 venv 17 directories, 36 files","title":"User guide"},{"location":"about/#project-structure","text":"Project tree . \u251c\u2500\u2500 db.sqlite3 \u251c\u2500\u2500 docker \u2502 \u251c\u2500\u2500 docker-compose.yml \u2502 \u251c\u2500\u2500 entrypoint.sh \u2502 \u251c\u2500\u2500 nginx \u2502 \u2502 \u251c\u2500\u2500 default.conf \u2502 \u2502 \u2514\u2500\u2500 Dockerfile \u2502 \u251c\u2500\u2500 start.sh \u2502 \u2514\u2500\u2500 webapp \u2502 \u2514\u2500\u2500 Dockerfile \u251c\u2500\u2500 docs \u2502 \u251c\u2500\u2500 about.md \u2502 \u2514\u2500\u2500 index.md \u251c\u2500\u2500 Makefile \u251c\u2500\u2500 manage.py \u251c\u2500\u2500 mkdocs.yml \u251c\u2500\u2500 README.md \u251c\u2500\u2500 requirements.txt \u251c\u2500\u2500 source \u2502 \u251c\u2500\u2500 apps \u2502 \u2502 \u251c\u2500\u2500 common \u2502 \u2502 \u2502 \u251c\u2500\u2500 admin.py \u2502 \u2502 \u2502 \u251c\u2500\u2500 apps.py \u2502 \u2502 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u2502 \u2502 \u251c\u2500\u2500 migrations \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 __init__.py \u2502 \u2502 \u2502 \u251c\u2500\u2500 models.py \u2502 \u2502 \u2502 \u251c\u2500\u2500 tests.py \u2502 \u2502 \u2502 \u251c\u2500\u2500 urls.py \u2502 \u2502 \u2502 \u2514\u2500\u2500 views.py \u2502 \u2502 \u2514\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 assets \u2502 \u2502 \u251c\u2500\u2500 static \u2502 \u2502 \u2514\u2500\u2500 static-dev \u2502 \u2502 \u2514\u2500\u2500 local \u2502 \u251c\u2500\u2500 core \u2502 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u2502 \u251c\u2500\u2500 tests \u2502 \u2502 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u2502 \u2502 \u2514\u2500\u2500 test_utils.py \u2502 \u2502 \u2514\u2500\u2500 utils.py \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 media \u2502 \u251c\u2500\u2500 settings \u2502 \u2502 \u251c\u2500\u2500 base.py \u2502 \u2502 \u251c\u2500\u2500 dev.py \u2502 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u2502 \u2514\u2500\u2500 prod.py \u2502 \u251c\u2500\u2500 templates \u2502 \u2502 \u2514\u2500\u2500 index.html \u2502 \u251c\u2500\u2500 urls.py \u2502 \u2514\u2500\u2500 wsgi.py \u2514\u2500\u2500 venv 17 directories, 36 files","title":"Project Structure"}]}